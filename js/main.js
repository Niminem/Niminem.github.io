/* Generated by the Nim Compiler v1.4.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

function toFloat_1216659(i_1216661) {
  var result_1216662 = 0.0;

    result_1216662 = i_1216661;

  return result_1216662;

}
function HEX2F_1555648(x_1555650, y_1555651) {
  var result_1555652 = 0.0;

    result_1555652 = (toFloat_1216659(x_1555650) / toFloat_1216659(y_1555651));

  return result_1555652;

}
var scene = new THREE.Scene();
var camera = new THREE.PerspectiveCamera(75, HEX2F_1555648(window.innerWidth, window.innerHeight), 1.0000000000000001e-01, 1000);
var renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight, false);
document.body.appendChild(renderer.domElement);
var geometry = new THREE.BoxGeometry(3, 3, 3);
var material = new THREE.MeshBasicMaterial({color: 65280});
var cube = new THREE.Mesh(geometry, material);
scene.add(cube);
camera.position.z = 5.0000000000000000e+00;
function HEX2BHEX3D_1902188(x_1902192, x_1902192_Idx, y_1902193) {
    x_1902192[x_1902192_Idx] = (x_1902192[x_1902192_Idx] + y_1902193);

  
}
function animate() {
    window.requestAnimationFrame(animate);
    HEX2BHEX3D_1902188(cube.rotation, "x", 1.0000000000000000e-02);
    HEX2BHEX3D_1902188(cube.rotation, "y", 1.0000000000000000e-02);
    renderer.render(scene, camera);

  
}
animate();
